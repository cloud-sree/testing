https://github.com/cert-manager/cert-manager

Through HELM

helm repo add jetstack https://charts.jetstack.io --force-update

helm pull jetstack/cert-manager --version v1.15.1

helm install \
  cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --create-namespace \
  --version v1.15.1 \
  --set crds.enabled=true

install Log:

ubuntu@eck-m1:~/pulsar/cert-manager$ helm repo add jetstack https://charts.jetstack.io --force-update
"jetstack" has been added to your repositories
ubuntu@eck-m1:~/pulsar/cert-manager$ vi cert-manager.txt
ubuntu@eck-m1:~/pulsar/cert-manager$ vi cert-manager.txt
ubuntu@eck-m1:~/pulsar/cert-manager$ helm pull jetstack/cert-manager --version v1.15.1
ubuntu@eck-m1:~/pulsar/cert-manager$ ls -ltr
total 100
-rw-rw-r-- 1 ubuntu ubuntu   977 Jul  7 15:37 cert-manager.txt
-rw-r--r-- 1 ubuntu ubuntu 94756 Jul  7 15:37 cert-manager-v1.15.1.tgz
ubuntu@eck-m1:~/pulsar/cert-manager$ vi cert-manager.txt
ubuntu@eck-m1:~/pulsar/cert-manager$ helm install \
  cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --create-namespace \
  --version v1.15.1 \
  --set crds.enabled=true
NAME: cert-manager
LAST DEPLOYED: Sun Jul  7 15:37:54 2024
NAMESPACE: cert-manager
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
cert-manager v1.15.1 has been deployed successfully!

In order to begin issuing certificates, you will need to set up a ClusterIssuer
or Issuer resource (for example, by creating a 'letsencrypt-staging' issuer).

More information on the different types of issuers and how to configure them
can be found in our documentation:

https://cert-manager.io/docs/configuration/

For information on how to configure cert-manager to automatically provision
Certificates for Ingress resources, take a look at the `ingress-shim`
documentation:

https://cert-manager.io/docs/usage/ingress/






------------

Test:

https://cert-manager.io/docs/installation/kubectl/#verify

$ cat <<EOF > test-resources.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: cert-manager-test
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: test-selfsigned
  namespace: cert-manager-test
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: selfsigned-cert
  namespace: cert-manager-test
spec:
  dnsNames:
    - example.com
  secretName: selfsigned-cert-tls
  issuerRef:
    name: test-selfsigned
EOF

$ kubectl apply -f test-resources.yaml

kubectl describe certificate -n cert-manager-test


ubuntu@eck-m1:~/pulsar/cert-manager$ kubectl apply -f test-resources.yaml
namespace/cert-manager-test created
issuer.cert-manager.io/test-selfsigned created
certificate.cert-manager.io/selfsigned-cert created
ubuntu@eck-m1:~/pulsar/cert-manager$ kubectl describe certificate -n cert-manager-test
Name:         selfsigned-cert
Namespace:    cert-manager-test
Labels:       <none>
Annotations:  <none>
API Version:  cert-manager.io/v1
Kind:         Certificate
Metadata:
  Creation Timestamp:  2024-07-07T10:09:51Z
  Generation:          1
  Resource Version:    3619
  UID:                 7ce0d7c5-9896-4702-9f07-daa08b57a19c
Spec:
  Dns Names:
    example.com
  Issuer Ref:
    Name:       test-selfsigned
  Secret Name:  selfsigned-cert-tls
Status:
  Conditions:
    Last Transition Time:  2024-07-07T10:09:51Z
    Message:               Certificate is up to date and has not expired
    Observed Generation:   1
    Reason:                Ready
    Status:                True
    Type:                  Ready
  Not After:               2024-10-05T10:09:51Z
  Not Before:              2024-07-07T10:09:51Z
  Renewal Time:            2024-09-05T10:09:51Z
  Revision:                1
Events:
  Type    Reason     Age   From                                       Message
  ----    ------     ----  ----                                       -------
  Normal  Issuing    12s   cert-manager-certificates-trigger          Issuing certificate as Secret does not exist
  Normal  Generated  12s   cert-manager-certificates-key-manager      Stored new private key in temporary Secret resource "selfsigned-cert-24rvz"
  Normal  Requested  12s   cert-manager-certificates-request-manager  Created new CertificateRequest resource "selfsigned-cert-1"
  Normal  Issuing    12s   cert-manager-certificates-issuing          The certificate has been successfully issued

-----------------

more custom options

https://artifacthub.io/packages/helm/cert-manager/cert-manager
https://cert-manager.io/docs/installation/helm/
https://cert-manager.io/docs/installation/
